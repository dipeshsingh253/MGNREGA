Q-1)

create table Student 
(
roll int primary key, 
name varchar(12) not null, 
address varchar(12) not null, 
mobile varchar(10) not null 
);

create table Course 
(
cid int primary key, 
cname varchar(12) not null, 
fee int not null, 
duration varchar(12) not null 
);

//many-to-many
create table StudentCourse
(
roll int,
name varchar(12) not null,
cid int,
cname varchar(12) not null,
FOREIGN KEY (roll) REFERENCES Student(roll),
FOREIGN KEY (cid) REFERENCES Course(cid),
);

1)==> enrolling amit into java and spring

insert into StudentCourse values((select roll from Student where name='Amit'),'Amit',(select cid from Course where cname='Java'),'Java');

insert into StudentCourse values((select roll from Student where name='Amit'),'Amit',(select cid from Course where cname='Spring'),'Spring');


or

insert into 
StudentCourse(roll,name,cid,cname)
values
((select roll from Student where name='Amit'),'Amit',(select cid from Course where cname='Java'),'Java'),
((select roll from Student where name='Amit'),'Amit',(select cid from Course where cname='Sp ring'),'Spring');

2)==>  enrolling venkat into java and react

insert into StudentCourse values((select roll from Student where name='Venkat'),'Venkat',(select cid from Course where cname='Java'),'Java');

insert into StudentCourse values((select roll from Student where name='Venkat'),'Venkat',(select cid from Course where cname='React'),'React');

or


insert into 
StudentCourse(roll,name,cid,cname)
values
((select roll from Student where name='Venkat'),'Venkat',(select cid from Course where cname='Java'),'Java'),
((select roll from Student where name='Venkat'),'Venkat',(select cid from Course where cname='React'),'React');


3)==> 

insert into 
StudentCourse(roll,name,cid,cname)
values
((select roll from Student where name='Raj'),'Raj',(select cid from Course where cname='Spring'),'Spring'),
((select roll from Student where name='Raj'),'Raj',(select cid from Course where cname='Angular'),'Angular');


4)==>

insert into 
StudentCourse(roll,name,cid,cname)
values
((select roll from Student where name='Suresh'),'Suresh',(select cid from Course where cname='Java'),'Java'),
((select roll from Student where name='Suresh'),'Suresh',(select cid from Course where cname='Hibernate'),'Hibernate'),
((select roll from Student where name='Suresh'),'Suresh',(select cid from Course where cname='React'),'React');


5)==>

insert into 
StudentCourse(roll,name,cid,cname)
values
((select roll from Student where name='Binay'),'Binay',(select cid from Course where cname='React'),'React');



JDBC Application Query:

1)==> print course details from user input roll

select * from StudentCourse where roll="+inputroll+";

2)==> print student details from user input course name

select * from StudentCourse where cname="+cname+";

Q-2)

create table Department
(
did int primary key,
dname varchar(12) not null,
location varchar(12) not null
);

create table Employee
(
empId int primary key,
ename varchar(12) not null,
address varchar(12) not null,
mobile varchar(12) not null,
salary int not null,
deptId int,
FOREIGN KEY (deptId) REFERENCES Department(did) // one -to- many
);


1)==> 

insert into
Department(did,dname,location)
values
(1,'Account','Delhi'),
(2,'Sales','Delhi'),
(3,'Marketing','Delhi'),
(4,'HR','Delhi');


2)==>

insert into
Employee(empId,ename,address, mobile, salary,deptId)
values
(1,'Dipesh','Hariyana','9265805191',10000,1),
(2,'Rohit','Zarkhand','7852649653',8000,1),
(3,'Saurav','Maharastra','9265805564',10000,2),
(4,'Rahul','Gujarat','4555245191', 12000,2),
(5,'Rishi','Delhi','7854256315', 11080 ,2),
(6,'Jay','Gujarat','9265848191', 15000 ,3),
(7,'Harshil','Jaypur','9269605191', 13000 ,3),
(8,'Kaushik','Hariyana','9267405191', 18000 ,4),
(9,'Shivay','Haidarabad','9265805851', 20000 ,4);


3)==>

select deptId, sum(salary) Salary from Employee group by deptId;


4)==>

select * from Employee e where e.deptId = (select did from Department where dname='Sales');


5)==>

select * from Department d where d.did=(select deptId from Employee where empId='${employeeId}'); 

ex:

select * from Department d where d.did=(select deptId from Employee where empId=2); 

6)==>

select * from Employee order by salary desc limit 1,1;


Q-3)
Mainly four types of relationship:

1) one-to-one
2) one-to-many
3) many-to-many

examples:

==> one-to-one
  
  - one person can have only one Aadhar card 
  - one student can have one specific and unique GR no.
  
  -int mathematics one-to-one function means that for every value of x if there is only one y then these kind of functions are known as one-to-one function.
  
==> one-to-many

  - one customer can have only one unique customer id and also his/her order id can also be unique but multiple customer can order the same product
  
  
==> many-to-many

 - one teacher can have many students vice versa one student can have many teachers
